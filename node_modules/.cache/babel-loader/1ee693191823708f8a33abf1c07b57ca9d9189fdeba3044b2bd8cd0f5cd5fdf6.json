{"ast":null,"code":"var _jsxFileName = \"/home/yagnik/Learning/ReactJS/ui-demo/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SideBar from './UICoponents/SideBar';\nimport SignIn from './SignIn/SignIn';\nimport { useState } from 'react';\nimport AuthContext from './StoreContext/context-value';\nimport SignUp from './SignUp/SignUp';\nimport { Route, Routes } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isLogin, setIsLogin] = useState(false);\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [\"//    \", /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/signin\",\n      children: [\"//     \", /*#__PURE__*/_jsxDEV(SignIn, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 10\n      }, this), \"//    \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), \"//   \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this)\n  // <AuthContext.Provider\n  // \tvalue={{ isLoginContextValue: isLogin, }}>\n\n  // \t{isLogin && <SideBar />}\n  // \t{!isLogin &&\n  // \t\t<Routes>\n  // \t\t\t<Route path=\"/signin\">\n  // \t\t\t\t<SignIn />\n  // \t\t\t</Route>\n  // \t\t</Routes>\n  // \t}\n  // </AuthContext.Provider>\n  ;\n}\n_s(App, \"JvSgsX4M8G46LDE0KxvpuaiuM34=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["SideBar","SignIn","useState","AuthContext","SignUp","Route","Routes","jsxDEV","_jsxDEV","App","_s","isLogin","setIsLogin","children","path","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/yagnik/Learning/ReactJS/ui-demo/src/App.js"],"sourcesContent":["import './App.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport SideBar from './UICoponents/SideBar';\nimport SignIn from './SignIn/SignIn';\nimport { useState } from 'react';\nimport AuthContext from './StoreContext/context-value';\nimport SignUp from './SignUp/SignUp';\nimport { Route, Routes } from 'react-router-dom';\n\nfunction App() {\n\n\tconst [isLogin, setIsLogin] = useState(false);\n\n\treturn (\n\n\t\t<Routes>\n\t\t// \t\t\t<Route path=\"/signin\">\n\t\t// \t\t\t\t<SignIn />\n\t\t// \t\t\t</Route>\n\t\t// \t\t</Routes>\n\t\t// <AuthContext.Provider\n\t\t// \tvalue={{ isLoginContextValue: isLogin, }}>\n\n\t\t// \t{isLogin && <SideBar />}\n\t\t// \t{!isLogin &&\n\t\t// \t\t<Routes>\n\t\t// \t\t\t<Route path=\"/signin\">\n\t\t// \t\t\t\t<SignIn />\n\t\t// \t\t\t</Route>\n\t\t// \t\t</Routes>\n\t\t// \t}\n\t\t// </AuthContext.Provider>\n\t)\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,YAAY;AACnB,OAAO,sCAAsC;AAE7C,OAAOA,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,MAAM,MAAM,iBAAiB;AACpC,SAASC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEd,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE7C,oBAECM,OAAA,CAACF,MAAM;IAAAO,QAAA,GAAC,QACF,eAAAL,OAAA,CAACH,KAAK;MAACS,IAAI,EAAC,SAAS;MAAAD,QAAA,GAAC,SACrB,eAAAL,OAAA,CAACP,MAAM;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,UACX;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,SACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ;EACb;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEF;AAACR,EAAA,CAxBQD,GAAG;AAAAU,EAAA,GAAHV,GAAG;AA0BZ,eAAeA,GAAG;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}